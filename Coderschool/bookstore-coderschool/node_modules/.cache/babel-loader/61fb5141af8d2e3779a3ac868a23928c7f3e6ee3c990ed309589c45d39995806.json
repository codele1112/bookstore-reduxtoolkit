{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport api from \"../../apiService.js\";\nimport fetchBooks from \"./bookAPI\";\nimport { toast } from \"react-toastify\";\nconst initialState = {\n  books: [],\n  readinglist: [],\n  bookDetail: null,\n  status: null\n};\nexport const addToReadingList = createAsyncThunk(\"book/addToReadingList\", async book => {\n  const response = await api.post(`/favorites`, book);\n  return response.data;\n});\nexport const getReadingList = createAsyncThunk(\"book/getReadingList\", async () => {\n  const response = await api.get(`/favorites`);\n  return response.data;\n});\nexport const removeBook = createAsyncThunk(\"book/removeBook\", async removedBookId => {\n  const response = await api.delete(`/favorites/${removedBookId}`);\n\n  // console.log(response);\n  return response.data;\n});\nexport const getBookDetail = createAsyncThunk(\"book/getBookDetail\", async bookId => {\n  const response = await api.get(`/books/${bookId}`);\n  return response.data;\n});\nexport const fetchData = createAsyncThunk(\"book/fetchData\", async props => {\n  const response = await fetchBooks(props);\n  return response.data;\n});\nexport const bookSlice = createSlice({\n  name: \"book\",\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(fetchData.pending, state => {\n      state.status = \"loading\";\n    }).addCase(fetchData.fulfilled, (state, action) => {\n      state.status = null;\n      state.books = action.payload;\n    }).addCase(fetchData.rejected, (state, action) => {\n      state.status = \"failed\";\n    });\n    builder.addCase(addToReadingList.pending, state => {}).addCase(addToReadingList.fulfilled, (state, action) => {\n      console.log(action.payload);\n      toast.success(\"The book has been added to the reading list!\");\n    }).addCase(addToReadingList.rejected, (state, action) => {\n      toast.error(action.error.message);\n    });\n    builder.addCase(getReadingList.pending, state => {\n      state.status = \"pending\";\n    }).addCase(getReadingList.fulfilled, (state, action) => {\n      state.status = null;\n      state.readinglist = action.payload;\n    }).addCase(getReadingList.rejected, (state, action) => {\n      state.status = \"failed\";\n    });\n    builder.addCase(removeBook.pending, state => {\n      state.status = \"pending\";\n    }).addCase(removeBook.fulfilled, (state, action) => {\n      state.status = null;\n      toast.success(\"The book has been removed\");\n    }).addCase(removeBook.rejected, (state, action) => {\n      state.status = \"Failed to remove book\";\n    });\n    builder.addCase(getBookDetail.pending, state => {\n      state.status = \"pending\";\n    }).addCase(getBookDetail.fulfilled, (state, action) => {\n      state.status = null;\n      state.bookDetail = action.payload;\n    }).addCase(getBookDetail.rejected, (state, action) => {\n      state.status = \"Failed to remove book\";\n    });\n  }\n});\nexport default bookSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","api","fetchBooks","toast","initialState","books","readinglist","bookDetail","status","addToReadingList","book","response","post","data","getReadingList","get","removeBook","removedBookId","delete","getBookDetail","bookId","fetchData","props","bookSlice","name","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","console","log","success","error","message","reducer"],"sources":["/Users/nguyenduongthuyvy/WORKSPACE/Coderschool/bookstore-coderschool/src/components/book/bookSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport api from \"../../apiService.js\";\nimport fetchBooks from \"./bookAPI\";\nimport { toast } from \"react-toastify\";\n\nconst initialState = {\n  books: [],\n  readinglist: [],\n  bookDetail: null,\n  status: null,\n};\nexport const addToReadingList = createAsyncThunk(\n  \"book/addToReadingList\",\n  async (book) => {\n    const response = await api.post(`/favorites`, book);\n    return response.data;\n  }\n);\n\nexport const getReadingList = createAsyncThunk(\n  \"book/getReadingList\",\n  async () => {\n    const response = await api.get(`/favorites`);\n    return response.data;\n  }\n);\nexport const removeBook = createAsyncThunk(\n  \"book/removeBook\",\n  async (removedBookId) => {\n    const response = await api.delete(`/favorites/${removedBookId}`);\n\n    // console.log(response);\n    return response.data;\n  }\n);\nexport const getBookDetail = createAsyncThunk(\n  \"book/getBookDetail\",\n  async (bookId) => {\n    const response = await api.get(`/books/${bookId}`);\n    return response.data;\n  }\n);\nexport const fetchData = createAsyncThunk(\"book/fetchData\", async (props) => {\n  const response = await fetchBooks(props);\n  return response.data;\n});\nexport const bookSlice = createSlice({\n  name: \"book\",\n  initialState,\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchData.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchData.fulfilled, (state, action) => {\n        state.status = null;\n        state.books = action.payload;\n      })\n      .addCase(fetchData.rejected, (state, action) => {\n        state.status = \"failed\";\n      });\n    builder\n      .addCase(addToReadingList.pending, (state) => {})\n      .addCase(addToReadingList.fulfilled, (state, action) => {\n        console.log(action.payload);\n        toast.success(\"The book has been added to the reading list!\");\n      })\n      .addCase(addToReadingList.rejected, (state, action) => {\n        toast.error(action.error.message);\n      });\n    builder\n      .addCase(getReadingList.pending, (state) => {\n        state.status = \"pending\";\n      })\n      .addCase(getReadingList.fulfilled, (state, action) => {\n        state.status = null;\n        state.readinglist = action.payload;\n      })\n      .addCase(getReadingList.rejected, (state, action) => {\n        state.status = \"failed\";\n      });\n    builder\n      .addCase(removeBook.pending, (state) => {\n        state.status = \"pending\";\n      })\n      .addCase(removeBook.fulfilled, (state, action) => {\n        state.status = null;\n        toast.success(\"The book has been removed\");\n      })\n      .addCase(removeBook.rejected, (state, action) => {\n        state.status = \"Failed to remove book\";\n      });\n    builder\n      .addCase(getBookDetail.pending, (state) => {\n        state.status = \"pending\";\n      })\n      .addCase(getBookDetail.fulfilled, (state, action) => {\n        state.status = null;\n        state.bookDetail = action.payload;\n      })\n      .addCase(getBookDetail.rejected, (state, action) => {\n        state.status = \"Failed to remove book\";\n      });\n  },\n});\n\nexport default bookSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}